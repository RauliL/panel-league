@import './variables';

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background: @color-background;
}

@keyframes flashing {
  to {
    background-color: @color-flash;
  }
}

@keyframes garbage-flashing {
  to {
    background-color: lighten(@color-garbage, 30%);
  }
}

@keyframes garbage-preview {
  from {
    opacity: 0.5;
  }

  to {
    opacity: 0.9;
  }
}

.column {
  width: 50%;
  float: left;
}

.score {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  margin-top: @block-size;
  height: @block-size;
  width: @grid-width * @block-size;
  background: @color-background-grid;
  border-radius: 1em;
  padding-left: @block-size / 2;
  line-height: @block-size;
  span {
    color: @color-score;
    font-size: @block-size / 2;
    font-family: monospace;
  }
}

.grid {
  position: relative;
  background: @color-background-grid;
  margin-left: auto;
  margin-right: auto;
  margin-top: @block-size;
  width: @grid-width * @block-size;
  height: (@grid-height * @block-size) + (@block-size / 2);
  border-radius: 1em;
  overflow-y: hidden;

  .row {
    height: @block-size;

    .block {
      border-color: transparent;
      border-radius: 20%;
      border-width: @block-border-width;
      border-style: solid;
      position: relative;
      display: inline-block;
      line-height: @block-size;
      width: @block-size;
      height: @block-size;
      max-width: @block-size;
      max-height: @block-size;
      overflow: hidden;
      text-align: center;

      &::after {
        content: ' ';
        display: inline-block;
        font-family: FontAwesome;
        font-size: @block-size / 2;
        transform: translateY(-5%);
      }

      &.red {
        background: @color-block-red;
        border-top-color: lighten(@color-block-red, 15%);
        border-left-color: lighten(@color-block-red, 15%);
        border-bottom-color: darken(@color-block-red, 15%);
        border-right-color: darken(@color-block-red, 15%);

        &::after {
          content: @symbol-block-heart;
          color: lighten(@color-block-red, 30%);
        }
      }

      &.green {
        background: @color-block-green;
        border-top-color: lighten(@color-block-green, 15%);
        border-left-color: lighten(@color-block-green, 15%);
        border-bottom-color: darken(@color-block-green, 15%);
        border-right-color: darken(@color-block-green, 15%);

        &::after {
          content: @symbol-block-circle;
          color: lighten(@color-block-green, 25%);
        }
      }

      &.blue {
        background: @color-block-blue;
        border-top-color: lighten(@color-block-blue, 15%);
        border-left-color: lighten(@color-block-blue, 15%);
        border-bottom-color: darken(@color-block-blue, 15%);
        border-right-color: darken(@color-block-blue, 15%);

        &::after {
          content: @symbol-block-sort-asc;
          color: lighten(@color-block-blue, 25%);
          font-size: @block-size;
          transform: scale(1, 1.5) translateY(15%);
        }
      }

      &.violet {
        background: @color-block-violet;
        border-top-color: lighten(@color-block-violet, 15%);
        border-left-color: lighten(@color-block-violet, 15%);
        border-bottom-color: darken(@color-block-violet, 15%);
        border-right-color: darken(@color-block-violet, 15%);

        &::after {
          content: @symbol-block-square;
          color: lighten(@color-block-violet, 25%);
          transform: translateY(-10%) rotate(45deg);
        }
      }

      &.yellow {
        background: @color-block-yellow;
        border-top-color: lighten(@color-block-yellow, 15%);
        border-left-color: lighten(@color-block-yellow, 15%);
        border-bottom-color: darken(@color-block-yellow, 15%);
        border-right-color: darken(@color-block-yellow, 15%);

        &::after {
          content: @symbol-block-star;
          color: lighten(@color-block-yellow, 25%);
        }
      }

      &.navy {
        background: @color-block-navy;
        border-top-color: lighten(@color-block-navy, 15%);
        border-left-color: lighten(@color-block-navy, 15%);
        border-bottom-color: darken(@color-block-navy, 15%);
        border-right-color: darken(@color-block-navy, 15%);

        &::after {
          content: @symbol-block-sort-desc;
          color: lighten(@color-block-navy, 25%);
          font-size: @block-size;
          transform: scale(1, 1.5) translateY(-25%);
        }
      }

      &.swapper {
        border-color: @color-swapper;
        border-style: dotted;
      }

      &.flashing {
        animation-name: flashing;
        animation-duration: @animation-duration-flash;
        animation-iteration-count: infinite;
        animation-direction: alternate;
      }

      &.garbage-preview {
        z-index: @z-index-garbage-preview;
        animation-name: garbage-preview;
        animation-duration: @animation-duration-garbage-flash;
        animation-iteration-count: infinite;
        animation-direction: alternate;
      }
    }

    &.preview {
      .block {
        opacity: 0.3;
      }
    }
  }
}

.tooltip {
  z-index: @z-index-tooltip;
  width: @block-size;
  height: @block-size;
  max-width: @block-size;
  max-height: @block-size;
  font-size: @block-size / 2;
  line-height: @block-size;
  text-align: center;
  color: @color-tooltip;
  transition: transform 1s, opacity 1s;
  font-family: Arial, Verdana, sans-serif;

  &.animate {
    transform: translateY(-(@block-size * 2));
    opacity: 0.3;
  }
}

.garbage {
  background: @color-garbage;
  border-color: @color-garbage-border;
  border-style: solid;
  border-width: @garbage-border-width;
  border-radius: @garbage-border-radius;
  position: absolute;
  z-index: @z-index-garbage;
  overflow: hidden;

  &.flashing {
    animation-name: garbage-flashing;
    animation-duration: @animation-duration-garbage-flash;
    animation-iteration-count: infinite;
    animation-direction: alternate;
  }
}
